import React, { useState, useEffect } from "react";

const arduinoIP = "http://10.10.10.4";

export default function App() {
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [loginError, setLoginError] = useState("");
  const [lampStates, setLampStates] = useState({ lamp1: "off", lamp2: "off" });

  useEffect(() => {
    if (isLoggedIn) {
      fetchStatus();
    }
  }, [isLoggedIn]);

  const login = () => {
    if (username === "admin" && password === "admin") {
      setIsLoggedIn(true);
      setLoginError("");
    } else {
      setLoginError("\u26A0 Wrong username or password!");
    }
  };

  const logout = () => {
    setIsLoggedIn(false);
    setUsername("");
    setPassword("");
    setLoginError("");
    setLampStates({ lamp1: "off", lamp2: "off" });
  };

  const setLampState = (lamp, state) => {
    updateStatus(lamp, state);

    fetch(`${arduinoIP}/?${lamp}=${state}`)
      .then((res) => res.json())
      .then((data) => {
        setLampStates({
          lamp1: data.lamp1,
          lamp2: data.lamp2,
        });
      })
      .catch(() => {
        console.log(`Arduino not reachable when setting ${lamp} to ${state}`);
      });
  };

  const fetchStatus = () => {
    fetch(arduinoIP)
      .then((res) => res.json())
      .then((data) => {
        setLampStates({
          lamp1: data.lamp1,
          lamp2: data.lamp2,
        });
      })
      .catch(() => {
        console.log("Failed to fetch status from Arduino.");
      });
  };

  const updateStatus = (lamp, state) => {
    setLampStates((prev) => ({ ...prev, [lamp]: state }));
  };

  const statusClass = (state) => (state === "on" ? "on" : "off");

  return (
    <div className="container">
      <style>{`
        body {
          font-family: 'Segoe UI', sans-serif;
          background: linear-gradient(135deg, #1a2980, #26d0ce);
          color: #fff;
          text-align: center;
          margin: 0;
          padding: 0;
        }
        .container {
          padding-top: 80px;
        }
        .card {
          background: rgba(0, 0, 0, 0.3);
          padding: 30px;
          border-radius: 12px;
          display: inline-block;
          box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
          min-width: 300px;
        }
        input, button {
          padding: 10px;
          width: 80%;
          border: none;
          border-radius: 6px;
          margin-bottom: 10px;
        }
        button {
          width: auto;
          background-color: #00c9ff;
          color: #fff;
          font-weight: bold;
          cursor: pointer;
          transition: background-color 0.3s;
        }
        button:hover {
          background-color: #007acc;
        }
        .logout-btn {
          background-color: #ff4b5c;
        }
        .logout-btn:hover {
          background-color: #d32f2f;
        }
        .status {
          font-weight: bold;
          margin-top: 5px;
        }
        .on {
          color: #00ff88;
        }
        .off {
          color: #ff4b5c;
        }
      `}</style>

      {!isLoggedIn ? (
        <div className="card">
          <h2>Login</h2>
          <input
            type="text"
            placeholder="Username"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
          /><br />
          <input
            type="password"
            placeholder="Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          /><br />
          <button onClick={login}>Login</button>
          <p style={{ color: "#ff8080" }}>{loginError}</p>
        </div>
      ) : (
        <div className="card">
          <h1>PLC Lamp Control</h1>

          <h2>Lamp 1</h2>
          <button onClick={() => setLampState("lamp1", "on")}>Turn Lamp 1 ON</button>
          <button onClick={() => setLampState("lamp1", "off")}>Turn Lamp 1 OFF</button>
          <div className={`status ${statusClass(lampStates.lamp1)}`}>
            Status: {lampStates.lamp1.toUpperCase()}
          </div>

          <h2>Lamp 2</h2>
          <button onClick={() => setLampState("lamp2", "on")}>Turn Lamp 2 ON</button>
          <button onClick={() => setLampState("lamp2", "off")}>Turn Lamp 2 OFF</button>
          <div className={`status ${statusClass(lampStates.lamp2)}`}>
            Status: {lampStates.lamp2.toUpperCase()}
          </div>

          <br />
          <button className="logout-btn" onClick={logout}>Logout</button>
        </div>
      )}
    </div>
  );
}
